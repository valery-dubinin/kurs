---
- name: ping server
  ping:

#- name: create a directory
#  ansible.builtin.file:
#    path: /etc/zabbix-files
#    state: directory
#    mode: "0755"

#- name: download the zabbix
#  ansible.builtin.get_url:
#    url: "https://repo.zabbix.com/zabbix/6.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_6.0-4+ubuntu22.04_all.deb"
#    dest: /etc/zabbix-files
#  become: true

#- name: install the zabbix package
#  ansible.builtin.apt:
#    deb: /etc/zabbix-files/zabbix-release_6.0-4+ubuntu22.04_all.deb
#  become: true

- name: download and install the zabbix package
  ansible.builtin.apt:
    deb: https://repo.zabbix.com/zabbix/6.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_6.0-4+ubuntu20.04_all.deb
  become: true

- name: update apt packages
  apt:
    force_apt_get: true
    update_cache: yes
    upgrade: dist
  become: true

- name: install zabbix
  ansible.builtin.apt:
    pkg:
      - zabbix-server-mysql
      - zabbix-frontend-php
      - zabbix-nginx-conf
      - zabbix-sql-scripts
      - zabbix-agent

- name: install mysql
  ansible.builtin.apt:
    name:
      - mysql-server
      - python3-pip
      - libmysqlclient-dev
      - python3-dev
      - python3-mysqldb
    state: present

- name: enable and reload mysql
  ansible.builtin.systemd:
    name: mysql
    enabled: true
    masked: no
    state: restarted

- name: create mysql user
  community.mysql.mysql_user:
    name: zabbix
    password: "{{password_db}}"
    priv: "*.*:ALL,GRANT"
    state: present

- name: create mysql database
  community.mysql.mysql_db:
    name: zabbix
    encoding: utf8mb4
    collation: utf8mb4_bin
    state: present

- name: search for server.sql
  stat:
    path: /usr/share/zabbix-sql-scripts/mysql/server.sql
  register: result

- name: extract .gz into /tmp
  ansible.builtin.shell:
    cmd: gunzip /usr/share/zabbix-sql-scripts/mysql/server.sql.gz
  when: not result.stat.exists

- name: import preset (will not be executed if server.sql existed before Extracting)
  community.mysql.mysql_db:
    name: zabbix
    state: import
    target: /usr/share/zabbix-sql-scripts/mysql/server.sql
  when: not result.stat.exists

- name: set new database password for mysql database
  ansible.builtin.lineinfile:
    path: /etc/zabbix/zabbix_server.conf
    insertafter: "DBPassword="
    line: DBPassword={{password_db}}
    
- name: replace zabbix config
  ansible.builtin.copy: 
    src: /home/user/kurs/ansible/roles/zabbix-server/files/nginx.conf
    dest: /etc/zabbix/
    
- name: enable and restart zabbix-server
  ansible.builtin.systemd:
    name: zabbix-server
    enabled: true
    masked: no
    state: restarted
  become: true

- name: enable and restart zabbix-agent
  ansible.builtin.systemd:
    name: zabbix-agent
    enabled: true
    masked: no
    state: restarted
  become: true

- name: enable and restart nginx
  ansible.builtin.systemd:
    name: nginx
    enabled: true
    masked: no
    state: restarted
  become: true

- name: enable and restart php
  ansible.builtin.systemd:
    name: php7.4-fpm
    enabled: true
    masked: no
    state: restarted
  become: true
